@page "/ProfileE"
@using CarRentalClientServer.Models


<Jumbotron>
    <JumbotronTitle Size="JumbotronTitleSize.Is3">Profile</JumbotronTitle>
    <JumbotronSubtitle>
        Account detail for employee.
    </JumbotronSubtitle>
</Jumbotron>
<Figure Flex="Flex.JustifyContent.Center">
    <FigureImage Source="Img/UserIconBig.png" AlternateText="UserIcon" />
</Figure>
<Row>
    <Column ColumnSize="ColumnSize.IsFull">
        <Card Margin="Margin.Is4.OnY">
            <CardBody Flex="Flex.JustifyContent.Center">
                <Fields>
                    <Field ColumnSize="ColumnSize.Is6.OnDesktop">
                            <Heading Size="HeadingSize.Is5">Name:</Heading>
                            <Paragraph>@eTest.Name</Paragraph>
                    </Field>
                    <Field ColumnSize="ColumnSize.Is6.OnDesktop">
                            <Heading Size="HeadingSize.Is5">Email(Account):</Heading>
                            <Paragraph>@eTest.Email</Paragraph>
                    </Field>
                    <Field ColumnSize="ColumnSize.Is6.OnDesktop">
                            <Heading Size="HeadingSize.Is5">Account level:</Heading>
                            <Paragraph>@eTest.ClearanceLevel</Paragraph>
                    </Field>
                    <Field ColumnSize="ColumnSize.Is6.OnDesktop">
                        <Button Color="Color.Info" Size="Size.Medium" Clicked="@ShowEdit">Edit profile</Button>
                        <Button Color="Color.Info" Size="Size.Medium" Clicked="@ShowChangePassword">Change password</Button>
                    </Field>
                </Fields>
            </CardBody>
        </Card>
    </Column>
</Row>

<Modal @ref="modalProfileE">
    <ModalContent Size="ModalSize.Large" Centered>
        <ModalHeader>
            <ModalTitle>Edit profile</ModalTitle>
            <CloseButton />
        </ModalHeader>
        <ModalBody>
            <Validations Mode="ValidationMode.Auto" Model="@eTest">
                <Validation>
                    <Field Horizontal="true">
                        <FieldLabel ColumnSize="ColumnSize.Is2">Full Name</FieldLabel>
                        <FieldBody ColumnSize="ColumnSize.Is10">
                            <TextEdit Placeholder="First and last name" @bind-Text="@eTest.Name">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </FieldBody>
                    </Field>
                </Validation>
                <Validation>
                    <Field Horizontal="true">
                        <FieldLabel ColumnSize="ColumnSize.Is2">Email</FieldLabel>
                        <FieldBody ColumnSize="ColumnSize.Is10">
                            <TextEdit Placeholder="Enter email" @bind-Text="@eTest.Email">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </FieldBody>
                    </Field>
                </Validation>

            </Validations>
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Primary" Clicked="@SaveChange">Save</Button>
            <Button Color="Color.Secondary" Clicked="@HideEdit">Cancel</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

<Modal @ref="modalPassword">
    <ModalContent Size="ModalSize.Large" Centered>
        <ModalHeader>
            <ModalTitle>Change password</ModalTitle>
            <CloseButton />
        </ModalHeader>
        <ModalBody>
            <Validations Mode="ValidationMode.Auto" Model="@eTest">
                <Validation>
                    <Field Horizontal="true">
                        <FieldLabel ColumnSize="ColumnSize.Is2">Password</FieldLabel>
                        <FieldBody ColumnSize="ColumnSize.Is10">
                            <TextEdit Role="TextRole.Password" Placeholder="Password" @bind-Text="@eTest.Password">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </FieldBody>
                    </Field>
                </Validation>
                <Validation>
                    <Field Horizontal="true">
                        <FieldLabel ColumnSize="ColumnSize.Is2">Re Password</FieldLabel>
                        <FieldBody ColumnSize="ColumnSize.Is10">
                            <TextEdit Role="TextRole.Password" Placeholder="Retype password" @bind-Text="@eTest.Password">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </FieldBody>
                    </Field>
                </Validation>
            </Validations>
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Primary" Clicked="@SavePasswordChange">Save</Button>
            <Button Color="Color.Secondary" Clicked="@HidePassword">Cancel</Button>
        </ModalFooter>
    </ModalContent>
</Modal>


@code {
    Employee eTest = new Employee()
        {
            Id = 2,
            Name = "EMPLOYEE TEST",
            Email = "EMPLOYEETEST@TEST.COM",
            Password = "TEST",
            ClearanceLevel = 10
        };

    private Modal modalProfileE;
    private Modal modalPassword;
    [Inject] INotificationService NotificationService { get; set; }

    private Task ShowEdit()
    {
        return modalProfileE.Show();
    }

    private Task HideEdit()
    {
        return modalProfileE.Hide();
    }

    private Task SaveChange()
    {
        NotificationService.Info("Change saved!");
        //Save change part
        return modalProfileE.Hide();

    }

    private Task ShowChangePassword()
    {
        return modalPassword.Show();
    }

    private Task HidePassword()
    {
        return modalPassword.Hide();
    }

    private Task SavePasswordChange()
    {
        NotificationService.Info("Password changed!");
        //Save password part
        return modalPassword.Hide();
    }

}
